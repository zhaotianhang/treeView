// <auto-generated />
using System;
using Dashboard1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dashboard1.Migrations
{
    [DbContext(typeof(TreeViewContext))]
    [Migration("20201116073115_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dashboard1.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MenuId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Dashboard1.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("Dashboard1.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ChirdrenTestId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Data")
                        .HasColumnType("json");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ParentTestId")
                        .HasColumnType("int");

                    b.HasKey("TestId");

                    b.HasIndex("ParentTestId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Dashboard1.MenuItem", b =>
                {
                    b.HasOne("Dashboard1.Menu", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("Dashboard1.Test", b =>
                {
                    b.HasOne("Dashboard1.Test", "Tests")
                        .WithMany("ChirdrenTests")
                        .HasForeignKey("ParentTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
